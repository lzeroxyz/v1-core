/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type LockFundsInputStruct = {
  from: string;
  reservationId: BigNumberish;
  tokenAddresses: string[];
  amounts: BigNumberish[];
};

export type LockFundsInputStructOutput = [
  string,
  BigNumber,
  string[],
  BigNumber[]
] & {
  from: string;
  reservationId: BigNumber;
  tokenAddresses: string[];
  amounts: BigNumber[];
};

export type UnlockFundsInputStruct = {
  from: string;
  reservationId: BigNumberish;
  tokenAddress: string[];
  amount: BigNumberish[];
};

export type UnlockFundsInputStructOutput = [
  string,
  BigNumber,
  string[],
  BigNumber[]
] & {
  from: string;
  reservationId: BigNumber;
  tokenAddress: string[];
  amount: BigNumber[];
};

export interface IPaymentKernelInterface extends utils.Interface {
  contractName: "IPaymentKernel";
  functions: {
    "lockFunds((address,uint256,address[],uint256[]))": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "unlockFunds((address,uint256,address[],uint256[]))": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "lockFunds",
    values: [LockFundsInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unlockFunds",
    values: [UnlockFundsInputStruct]
  ): string;

  decodeFunctionResult(functionFragment: "lockFunds", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unlockFunds",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IPaymentKernel extends BaseContract {
  contractName: "IPaymentKernel";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPaymentKernelInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    lockFunds(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "lockFunds((address,uint256,address[],uint256[]))"(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    unlockFunds(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "unlockFunds((address,uint256,address[],uint256[]))"(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  lockFunds(
    lockFundsInput: LockFundsInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "lockFunds((address,uint256,address[],uint256[]))"(
    lockFundsInput: LockFundsInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  unlockFunds(
    unlockFundsInput: UnlockFundsInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "unlockFunds((address,uint256,address[],uint256[]))"(
    unlockFundsInput: UnlockFundsInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    lockFunds(
      lockFundsInput: LockFundsInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "lockFunds((address,uint256,address[],uint256[]))"(
      lockFundsInput: LockFundsInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    unlockFunds(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "unlockFunds((address,uint256,address[],uint256[]))"(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    lockFunds(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "lockFunds((address,uint256,address[],uint256[]))"(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unlockFunds(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "unlockFunds((address,uint256,address[],uint256[]))"(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    lockFunds(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "lockFunds((address,uint256,address[],uint256[]))"(
      lockFundsInput: LockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unlockFunds(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "unlockFunds((address,uint256,address[],uint256[]))"(
      unlockFundsInput: UnlockFundsInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
