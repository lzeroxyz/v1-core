/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC777",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC777__factory>;
    getContractFactory(
      name: "IERC777Recipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC777Recipient__factory>;
    getContractFactory(
      name: "IERC777Sender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC777Sender__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "GoodKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodKernel__factory>;
    getContractFactory(
      name: "GoodServiceTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodServiceTokenFactory__factory>;
    getContractFactory(
      name: "GoodServiceVoucherTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodServiceVoucherTokenFactory__factory>;
    getContractFactory(
      name: "GoodTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodTokenFactory__factory>;
    getContractFactory(
      name: "IKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernel__factory>;
    getContractFactory(
      name: "IPaymentPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaymentPool__factory>;
    getContractFactory(
      name: "ITokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenFactory__factory>;
    getContractFactory(
      name: "IGoodKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGoodKernel__factory>;
    getContractFactory(
      name: "IGoodServiceTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGoodServiceTokenFactory__factory>;
    getContractFactory(
      name: "IGoodServiceVoucherTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGoodServiceVoucherTokenFactory__factory>;
    getContractFactory(
      name: "IGoodTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGoodTokenFactory__factory>;
    getContractFactory(
      name: "ILZeroRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILZeroRouter__factory>;
    getContractFactory(
      name: "IPaymentKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaymentKernel__factory>;
    getContractFactory(
      name: "IReservationKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReservationKernel__factory>;
    getContractFactory(
      name: "IReservationTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReservationTokenFactory__factory>;
    getContractFactory(
      name: "LZeroRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LZeroRouter__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "GoodKernelMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodKernelMock__factory>;
    getContractFactory(
      name: "GoodServiceTokenFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodServiceTokenFactoryMock__factory>;
    getContractFactory(
      name: "GoodServiceVoucherTokenFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodServiceVoucherTokenFactoryMock__factory>;
    getContractFactory(
      name: "GoodTokenFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodTokenFactoryMock__factory>;
    getContractFactory(
      name: "PaymentKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentKernel__factory>;
    getContractFactory(
      name: "PaymentPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentPool__factory>;
    getContractFactory(
      name: "PaymentPoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentPoolDeployer__factory>;
    getContractFactory(
      name: "PaymentPoolRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentPoolRegistry__factory>;
    getContractFactory(
      name: "ReservationKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReservationKernel__factory>;
    getContractFactory(
      name: "ReservationTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReservationTokenFactory__factory>;
    getContractFactory(
      name: "Kernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Kernable__factory>;
    getContractFactory(
      name: "Routable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Routable__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC777",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC777>;
    getContractAt(
      name: "IERC777Recipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC777Recipient>;
    getContractAt(
      name: "IERC777Sender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC777Sender>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "GoodKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodKernel>;
    getContractAt(
      name: "GoodServiceTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodServiceTokenFactory>;
    getContractAt(
      name: "GoodServiceVoucherTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodServiceVoucherTokenFactory>;
    getContractAt(
      name: "GoodTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodTokenFactory>;
    getContractAt(
      name: "IKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernel>;
    getContractAt(
      name: "IPaymentPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPaymentPool>;
    getContractAt(
      name: "ITokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenFactory>;
    getContractAt(
      name: "IGoodKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGoodKernel>;
    getContractAt(
      name: "IGoodServiceTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGoodServiceTokenFactory>;
    getContractAt(
      name: "IGoodServiceVoucherTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGoodServiceVoucherTokenFactory>;
    getContractAt(
      name: "IGoodTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGoodTokenFactory>;
    getContractAt(
      name: "ILZeroRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILZeroRouter>;
    getContractAt(
      name: "IPaymentKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPaymentKernel>;
    getContractAt(
      name: "IReservationKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReservationKernel>;
    getContractAt(
      name: "IReservationTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReservationTokenFactory>;
    getContractAt(
      name: "LZeroRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LZeroRouter>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "GoodKernelMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodKernelMock>;
    getContractAt(
      name: "GoodServiceTokenFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodServiceTokenFactoryMock>;
    getContractAt(
      name: "GoodServiceVoucherTokenFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodServiceVoucherTokenFactoryMock>;
    getContractAt(
      name: "GoodTokenFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodTokenFactoryMock>;
    getContractAt(
      name: "PaymentKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentKernel>;
    getContractAt(
      name: "PaymentPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentPool>;
    getContractAt(
      name: "PaymentPoolDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentPoolDeployer>;
    getContractAt(
      name: "PaymentPoolRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentPoolRegistry>;
    getContractAt(
      name: "ReservationKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReservationKernel>;
    getContractAt(
      name: "ReservationTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReservationTokenFactory>;
    getContractAt(
      name: "Kernable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Kernable>;
    getContractAt(
      name: "Routable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Routable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
