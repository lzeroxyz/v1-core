/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { GoodHelper, GoodHelperInterface } from '../GoodHelper';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
    ],
    name: 'GoodBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum GoodState',
        name: 'goodState',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'goodUri',
        type: 'string',
      },
    ],
    name: 'GoodCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
    ],
    name: 'GoodPaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodServiceId',
        type: 'uint256',
      },
    ],
    name: 'GoodServiceBurned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodServiceId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum GoodServiceState',
        name: 'goodServiceState',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'goodServiceUri',
        type: 'string',
      },
    ],
    name: 'GoodServiceCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodServiceId',
        type: 'uint256',
      },
    ],
    name: 'GoodServicePaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodServiceId',
        type: 'uint256',
      },
    ],
    name: 'GoodServiceUnpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'goodId',
        type: 'uint256',
      },
    ],
    name: 'GoodUnpaused',
    type: 'event',
  },
];

const _bytecode =
  '0x6115ac610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c80637666ab261161005a5780637666ab26146100f1578063d5c096951461011a578063f896af231461014357610071565b8063111d9031146100765780635124f891146100b4575b600080fd5b81801561008257600080fd5b5061009d60048036038101906100989190610d29565b61016c565b6040516100ab9291906110a2565b60405180910390f35b8180156100c057600080fd5b506100db60048036038101906100d69190610c8d565b6102ae565b6040516100e89190611087565b60405180910390f35b8180156100fd57600080fd5b5061011860048036038101906101139190610cfc565b610731565b005b81801561012657600080fd5b50610141600480360381019061013c9190610d98565b6107d8565b005b81801561014f57600080fd5b5061016a60048036038101906101659190610cfc565b610915565b005b60008060008390508073ffffffffffffffffffffffffffffffffffffffff1663d0def521866000015187604001516040518363ffffffff1660e01b81526004016101b7929190610f50565b602060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102099190610dff565b92506001915060018660020160008282540192505081905550828660030160008860020154815260200190815260200160002060000181905550818660030160008860020154815260200190815260200160002060020160006101000a81548160ff02191690836001811115610282576102816112ed565b5b021790555085600201548660040160008581526020019081526020016000208190555050935093915050565b60004283608001516fffffffffffffffffffffffffffffffff1610610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90611007565b60405180910390fd5b60005b6001856003015461031c919061113d565b8110156104625760008560040160008381526020019081526020016000206000015414156103495761044f565b84600401600082815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1684608001516fffffffffffffffffffffffffffffffff1610801561040f575084600401600082815260200190815260200160002060010160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168460a001516fffffffffffffffffffffffffffffffff16115b61044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590611047565b60405180910390fd5b5b808061045a90611275565b91505061030b565b5060008290508073ffffffffffffffffffffffffffffffffffffffff1663d3fc98648560000151876001015487606001516040518463ffffffff1660e01b81526004016104b193929190610fa9565b602060405180830381600087803b1580156104cb57600080fd5b505af11580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190610dff565b915061050d6109bc565b82816000018181525050846080015181602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250508460a0015181604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050600081608001906001811115610598576105976112ed565b5b908160018111156105ac576105ab6112ed565b5b815250508460c001518160a0019060028111156105cc576105cb6112ed565b5b908160028111156105e0576105df6112ed565b5b815250506001866003016000828254019250508190555080866004016000886003015481526020019081526020016000206000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160010160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506060820151816002015560808201518160030160006101000a81548160ff021916908360018111156106ce576106cd6112ed565b5b021790555060a08201518160030160016101000a81548160ff021916908360028111156106fe576106fd6112ed565b5b02179055509050508560030154866005016000836000015181526020019081526020016000208190555050509392505050565b600180811115610744576107436112ed565b5b8160010160009054906101000a900460ff166001811115610768576107676112ed565b5b146107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f90610fe7565b60405180910390fd5b60018160010160006101000a81548160ff021916908360018111156107d0576107cf6112ed565b5b021790555050565b600060018111156107ec576107eb6112ed565b5b8360020160009054906101000a900460ff1660018111156108105761080f6112ed565b5b14610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084790611027565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16639dc29fac8486600001546040518363ffffffff1660e01b8152600401610894929190610f80565b600060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505050508460030160008560000154815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055600382016000905550505050505050565b600180811115610928576109276112ed565b5b8160010160009054906101000a900460ff16600181111561094c5761094b6112ed565b5b1461098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390611067565b60405180910390fd5b60008160010160006101000a81548160ff021916908360018111156109b4576109b36112ed565b5b021790555050565b6040518060c001604052806000815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff1681526020016000815260200160006001811115610a1b57610a1a6112ed565b5b815260200160006002811115610a3457610a336112ed565b5b81525090565b6000610a4d610a48846110f0565b6110cb565b905082815260208101848484011115610a6957610a6861135a565b5b610a74848285611202565b509392505050565b600081359050610a8b816114f3565b92915050565b600081359050610aa08161150a565b92915050565b600082601f830112610abb57610aba61134b565b5b8135610acb848260208601610a3a565b91505092915050565b600060608284031215610aea57610ae9611350565b5b610af460606110cb565b90506000610b0484828501610a7c565b6000830152506020610b1884828501610c63565b602083015250604082013567ffffffffffffffff811115610b3c57610b3b611355565b5b610b4884828501610aa6565b60408301525092915050565b600060e08284031215610b6a57610b69611350565b5b610b7460e06110cb565b90506000610b8484828501610a7c565b6000830152506020610b9884828501610c63565b6020830152506040610bac84828501610c63565b604083015250606082013567ffffffffffffffff811115610bd057610bcf611355565b5b610bdc84828501610aa6565b6060830152506080610bf084828501610c4e565b60808301525060a0610c0484828501610c4e565b60a08301525060c0610c1884828501610a91565b60c08301525092915050565b600081359050610c338161151a565b92915050565b600081359050610c4881611531565b92915050565b600081359050610c5d81611548565b92915050565b600081359050610c728161155f565b92915050565b600081519050610c878161155f565b92915050565b600080600060608486031215610ca657610ca5611364565b5b6000610cb486828701610c24565b935050602084013567ffffffffffffffff811115610cd557610cd461135f565b5b610ce186828701610b54565b9250506040610cf286828701610a7c565b9150509250925092565b600060208284031215610d1257610d11611364565b5b6000610d2084828501610c39565b91505092915050565b600080600060608486031215610d4257610d41611364565b5b6000610d5086828701610c39565b935050602084013567ffffffffffffffff811115610d7157610d7061135f565b5b610d7d86828701610ad4565b9250506040610d8e86828701610a7c565b9150509250925092565b60008060008060808587031215610db257610db1611364565b5b6000610dc087828801610c39565b9450506020610dd187828801610c24565b9350506040610de287828801610a7c565b9250506060610df387828801610a7c565b91505092959194509250565b600060208284031215610e1557610e14611364565b5b6000610e2384828501610c78565b91505092915050565b610e3581611171565b82525050565b610e44816111f0565b82525050565b6000610e5582611121565b610e5f818561112c565b9350610e6f818560208601611211565b610e7881611369565b840191505092915050565b6000610e9060058361112c565b9150610e9b8261137a565b602082019050919050565b6000610eb3605e8361112c565b9150610ebe826113a3565b606082019050919050565b6000610ed660058361112c565b9150610ee182611418565b602082019050919050565b6000610ef960528361112c565b9150610f0482611441565b606082019050919050565b6000610f1c60058361112c565b9150610f27826114b6565b602082019050919050565b610f3b816111e6565b82525050565b610f4a816111e6565b82525050565b6000604082019050610f656000830185610e2c565b8181036020830152610f778184610e4a565b90509392505050565b6000604082019050610f956000830185610e2c565b610fa26020830184610f32565b9392505050565b6000606082019050610fbe6000830186610e2c565b610fcb6020830185610f32565b8181036040830152610fdd8184610e4a565b9050949350505050565b6000602082019050818103600083015261100081610e83565b9050919050565b6000602082019050818103600083015261102081610ea6565b9050919050565b6000602082019050818103600083015261104081610ec9565b9050919050565b6000602082019050818103600083015261106081610eec565b9050919050565b6000602082019050818103600083015261108081610f0f565b9050919050565b600060208201905061109c6000830184610f41565b92915050565b60006040820190506110b76000830185610f41565b6110c46020830184610e3b565b9392505050565b60006110d56110e6565b90506110e18282611244565b919050565b6000604051905090565b600067ffffffffffffffff82111561110b5761110a61131c565b5b61111482611369565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611148826111e6565b9150611153836111e6565b925082821015611166576111656112be565b5b828203905092915050565b600061117c826111c6565b9050919050565b6000819050611191826114df565b919050565b6000819050919050565b6000819050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111fb82611183565b9050919050565b82818337600083830152505050565b60005b8381101561122f578082015181840152602081019050611214565b8381111561123e576000848401525b50505050565b61124d82611369565b810181811067ffffffffffffffff8211171561126c5761126b61131c565b5b80604052505050565b6000611280826111e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112b3576112b26112be565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f474b303232000000000000000000000000000000000000000000000000000000600082015250565b7f476f6f644b65726e656c3a20556e61626c6520746f206372656174652061207660008201527f6f7563686572207769746820612073746172742074696d657374616d70203c2060208201527f746f207468652063757272656e7420626c6f636b2074696d657374616d700000604082015250565b7f474b303234000000000000000000000000000000000000000000000000000000600082015250565b7f476f6f644b65726e656c3a20556e61626c6520746f206372656174652061207660008201527f6f756368657220746861742073746172747320616e6420656e6473206f6e206160208201527f6e206578697374696e6720766f75636865720000000000000000000000000000604082015250565b7f474b303231000000000000000000000000000000000000000000000000000000600082015250565b600281106114f0576114ef6112ed565b5b50565b6114fc81611171565b811461150757600080fd5b50565b6003811061151757600080fd5b50565b61152381611196565b811461152e57600080fd5b50565b61153a816111a0565b811461154557600080fd5b50565b611551816111aa565b811461155c57600080fd5b50565b611568816111e6565b811461157357600080fd5b5056fea264697066735822122041c2a0efe78495cee465010c49d6ae140229541a1e5443a46c9b202c9191167764736f6c63430008050033';

type GoodHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoodHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoodHelper__factory extends ContractFactory {
  constructor(...args: GoodHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'GoodHelper';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoodHelper> {
    return super.deploy(overrides || {}) as Promise<GoodHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GoodHelper {
    return super.attach(address) as GoodHelper;
  }
  connect(signer: Signer): GoodHelper__factory {
    return super.connect(signer) as GoodHelper__factory;
  }
  static readonly contractName: 'GoodHelper';
  public readonly contractName: 'GoodHelper';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoodHelperInterface {
    return new utils.Interface(_abi) as GoodHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoodHelper {
    return new Contract(address, _abi, signerOrProvider) as GoodHelper;
  }
}
