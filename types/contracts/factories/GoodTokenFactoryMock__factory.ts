/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoodTokenFactoryMock,
  GoodTokenFactoryMockInterface,
} from "../GoodTokenFactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "kernelAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newKernel",
        type: "address",
      },
    ],
    name: "setKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009553480156200001657600080fd5b5060405162002629380380620026298339810160408190526200003991620001de565b604080518082018252600481526311dbdbd960e21b6020808301918252835180850190945260068452654c5a45524f4760d01b90840152815184938493929091620000879160009162000138565b5080516200009d90600190602084019062000138565b50506007805460ff1916905550620000b533620000de565b600880546001600160a01b0319166001600160a01b0392909216919091179055506200024d9050565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001469062000210565b90600052602060002090601f0160209004810192826200016a5760008555620001b5565b82601f106200018557805160ff1916838001178555620001b5565b82800160010185558215620001b5579182015b82811115620001b557825182559160200191906001019062000198565b50620001c3929150620001c7565b5090565b5b80821115620001c35760008155600101620001c8565b600060208284031215620001f157600080fd5b81516001600160a01b03811681146200020957600080fd5b9392505050565b600181811c908216806200022557607f821691505b602082108114156200024757634e487b7160e01b600052602260045260246000fd5b50919050565b6123cc806200025d6000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80638456cb59116100e3578063c87b56dd1161008c578063d4aae0c411610066578063d4aae0c41461032d578063e985e9c51461033e578063f2fde38b1461037a57600080fd5b8063c87b56dd146102f4578063cc81203c14610307578063d0def5211461031a57600080fd5b80639dc29fac116100bd5780639dc29fac146102bb578063a22cb465146102ce578063b88d4fde146102e157600080fd5b80638456cb59146102955780638da5cb5b1461029d57806395d89b41146102b357600080fd5b806342842e0e1161014557806370a082311161011f57806370a0823114610263578063715018a6146102845780637e1c0c091461028c57600080fd5b806342842e0e146102355780635c975abb146102485780636352211e1461025057600080fd5b8063095ea7b311610176578063095ea7b31461020557806323b872dd1461021a5780633f4ba83a1461022d57600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063081812fc146101da575b600080fd5b6101b06101ab366004612144565b61038d565b60405190151581526020015b60405180910390f35b6101cd6103e4565b6040516101bc919061222e565b6101ed6101e836600461217e565b610476565b6040516001600160a01b0390911681526020016101bc565b6102186102133660046120fd565b610510565b005b610218610228366004611f2b565b610660565b6102186106e7565b610218610243366004611f2b565b61079f565b6101b06107ba565b6101ed61025e36600461217e565b6107cd565b610276610271366004611edd565b610858565b6040519081526020016101bc565b6102186108f2565b61027660095481565b61021861095c565b60075461010090046001600160a01b03166101ed565b6101cd610a12565b6102186102c93660046120fd565b610a21565b6102186102dc366004612043565b610a2f565b6102186102ef366004611f67565b610a3a565b6101cd61030236600461217e565b610ac8565b610218610315366004611edd565b610c5b565b61027661032836600461207a565b610d1b565b6008546001600160a01b03166101ed565b6101b061034c366004611ef8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610218610388366004611edd565b610d5d565b60006001600160e01b0319821615806103cf57506001600160e01b031982167faa96535500000000000000000000000000000000000000000000000000000000145b806103de57506103de82610e42565b92915050565b6060600080546103f3906122b0565b80601f016020809104026020016040519081016040528092919081815260200182805461041f906122b0565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104f45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061051b826107cd565b9050806001600160a01b0316836001600160a01b031614156105a55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104eb565b336001600160a01b03821614806105df57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106515760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104eb565b61065b8383610ec4565b505050565b61066a3382610f32565b6106dc5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104eb565b61065b838383611025565b60075461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061072157506008546001600160a01b031633145b610795576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016104eb565b61079d6111f2565b565b61065b83838360405180602001604052806000815250610a3a565b60006107c860075460ff1690565b905090565b6000818152600260205260408120546001600160a01b0316806103de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104eb565b60006001600160a01b0382166108d65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104eb565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b036101009091041633146109525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b61079d6000611290565b60075461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061099657506008546001600160a01b031633145b610a0a576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016104eb565b61079d611301565b6060600180546103f3906122b0565b610a2b828261138b565b5050565b610a2b338383611436565b610a443383610f32565b610ab65760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104eb565b610ac284848484611505565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b555760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016104eb565b60008281526006602052604081208054610b6e906122b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9a906122b0565b8015610be75780601f10610bbc57610100808354040283529160200191610be7565b820191906000526020600020905b815481529060010190602001808311610bca57829003601f168201915b505050505090506000610c0560408051602081019091526000815290565b9050805160001415610c18575092915050565b815115610c4a578082604051602001610c329291906121c3565b60405160208183030381529060405292505050919050565b610c5384611583565b949350505050565b6007546001600160a01b03610100909104163314610cbb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b610cc36107ba565b610d0f5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104eb565b610d1881611679565b50565b6000610c538484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061174592505050565b6007546001600160a01b03610100909104163314610dbd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b6001600160a01b038116610e395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104eb565b610d1881611290565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610ea557506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103de57506301ffc9a760e01b6001600160e01b03198316146103de565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ef9826107cd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610fab5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104eb565b6000610fb6836107cd565b9050806001600160a01b0316846001600160a01b03161480610ff15750836001600160a01b0316610fe684610476565b6001600160a01b0316145b80610c5357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610c53565b826001600160a01b0316611038826107cd565b6001600160a01b0316146110b45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016104eb565b6001600160a01b03821661112f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104eb565b61113a600082610ec4565b6001600160a01b038316600090815260036020526040812080546001929061116390849061226d565b90915550506001600160a01b0382166000908152600360205260408120805460019290611191908490612241565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6111fa6107ba565b6112465760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104eb565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600780546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6113096107ba565b156113565760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104eb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112733390565b6113958282610f32565b61142d5760405162461bcd60e51b815260206004820152604b60248201527f476f6f6453657276696365546f6b656e466163746f72793a2063616c6c65722060448201527f6973206e6f74206f776e6572206f7220617070726f76656420746f206275726e60648201527f207468697320746f6b656e000000000000000000000000000000000000000000608482015260a4016104eb565b610a2b81611764565b816001600160a01b0316836001600160a01b031614156114985760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104eb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611510848484611025565b61151c848484846117a4565b610ac25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b6000818152600260205260409020546060906001600160a01b03166116105760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104eb565b600061162760408051602081019091526000815290565b905060008151116116475760405180602001604052806000815250611672565b80611651846118fc565b6040516020016116629291906121c3565b6040516020818303038152906040525b9392505050565b61168b816001600160a01b0316611a2e565b6117235760405162461bcd60e51b815260206004820152604160248201527f4b65726e61626c653a204e6577204b65726e656c20616464726573732069732060448201527f6e6f7420612076616c6964204b65726e656c20696d706c656d656e746174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a4016104eb565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600980546001019081905561175a8382611ad0565b6103de8183611aea565b61176d81611b93565b60008181526006602052604090208054611786906122b0565b159050610d18576000818152600660205260408120610d1891611dee565b60006001600160a01b0384163b156118f157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117e89033908990889088906004016121f2565b602060405180830381600087803b15801561180257600080fd5b505af1925050508015611832575060408051601f3d908101601f1916820190925261182f91810190612161565b60015b6118d7573d808015611860576040519150601f19603f3d011682016040523d82523d6000602084013e611865565b606091505b5080516118cf5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c53565b506001949350505050565b60608161193c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156119665780611950816122eb565b915061195f9050600a83612259565b9150611940565b60008167ffffffffffffffff8111156119815761198161235c565b6040519080825280601f01601f1916602001820160405280156119ab576020820181803683370190505b5090505b8415610c53576119c060018361226d565b91506119cd600a86612306565b6119d8906030612241565b60f81b8183815181106119ed576119ed612346565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611a27600a86612259565b94506119af565b60006001600160a01b03821615801590611a5157506001600160a01b0382163b15155b80156103de57506040516301ffc9a760e01b8152600060048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b158015611a9857600080fd5b505afa158015611aac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190612127565b610a2b828260405180602001604052806000815250611c2e565b6000828152600260205260409020546001600160a01b0316611b745760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016104eb565b6000828152600660209081526040909120825161065b92840190611e28565b6000611b9e826107cd565b9050611bab600083610ec4565b6001600160a01b0381166000908152600360205260408120805460019290611bd490849061226d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b611c388383611cac565b611c4560008484846117a4565b61065b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b6001600160a01b038216611d025760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104eb565b6000818152600260205260409020546001600160a01b031615611d675760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104eb565b6001600160a01b0382166000908152600360205260408120805460019290611d90908490612241565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054611dfa906122b0565b6000825580601f10611e0a575050565b601f016020900490600052602060002090810190610d189190611eac565b828054611e34906122b0565b90600052602060002090601f016020900481019282611e565760008555611e9c565b82601f10611e6f57805160ff1916838001178555611e9c565b82800160010185558215611e9c579182015b82811115611e9c578251825591602001919060010190611e81565b50611ea8929150611eac565b5090565b5b80821115611ea85760008155600101611ead565b80356001600160a01b0381168114611ed857600080fd5b919050565b600060208284031215611eef57600080fd5b61167282611ec1565b60008060408385031215611f0b57600080fd5b611f1483611ec1565b9150611f2260208401611ec1565b90509250929050565b600080600060608486031215611f4057600080fd5b611f4984611ec1565b9250611f5760208501611ec1565b9150604084013590509250925092565b60008060008060808587031215611f7d57600080fd5b611f8685611ec1565b9350611f9460208601611ec1565b925060408501359150606085013567ffffffffffffffff80821115611fb857600080fd5b818701915087601f830112611fcc57600080fd5b813581811115611fde57611fde61235c565b604051601f8201601f19908116603f011681019083821181831017156120065761200661235c565b816040528281528a602084870101111561201f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561205657600080fd5b61205f83611ec1565b9150602083013561206f81612372565b809150509250929050565b60008060006040848603121561208f57600080fd5b61209884611ec1565b9250602084013567ffffffffffffffff808211156120b557600080fd5b818601915086601f8301126120c957600080fd5b8135818111156120d857600080fd5b8760208285010111156120ea57600080fd5b6020830194508093505050509250925092565b6000806040838503121561211057600080fd5b61211983611ec1565b946020939093013593505050565b60006020828403121561213957600080fd5b815161167281612372565b60006020828403121561215657600080fd5b813561167281612380565b60006020828403121561217357600080fd5b815161167281612380565b60006020828403121561219057600080fd5b5035919050565b600081518084526121af816020860160208601612284565b601f01601f19169290920160200192915050565b600083516121d5818460208801612284565b8351908301906121e9818360208801612284565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526122246080830184612197565b9695505050505050565b6020815260006116726020830184612197565b600082198211156122545761225461231a565b500190565b60008261226857612268612330565b500490565b60008282101561227f5761227f61231a565b500390565b60005b8381101561229f578181015183820152602001612287565b83811115610ac25750506000910152565b600181811c908216806122c457607f821691505b602082108114156122e557634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122ff576122ff61231a565b5060010190565b60008261231557612315612330565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610d1857600080fd5b6001600160e01b031981168114610d1857600080fdfea2646970667358221220061d38dfe211bba777775d69181942095d6961d673c7be1bd8077d2852dcb08664736f6c63430008050033";

type GoodTokenFactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoodTokenFactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoodTokenFactoryMock__factory extends ContractFactory {
  constructor(...args: GoodTokenFactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GoodTokenFactoryMock";
  }

  deploy(
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoodTokenFactoryMock> {
    return super.deploy(
      kernelAddress,
      overrides || {}
    ) as Promise<GoodTokenFactoryMock>;
  }
  getDeployTransaction(
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(kernelAddress, overrides || {});
  }
  attach(address: string): GoodTokenFactoryMock {
    return super.attach(address) as GoodTokenFactoryMock;
  }
  connect(signer: Signer): GoodTokenFactoryMock__factory {
    return super.connect(signer) as GoodTokenFactoryMock__factory;
  }
  static readonly contractName: "GoodTokenFactoryMock";
  public readonly contractName: "GoodTokenFactoryMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoodTokenFactoryMockInterface {
    return new utils.Interface(_abi) as GoodTokenFactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoodTokenFactoryMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoodTokenFactoryMock;
  }
}
