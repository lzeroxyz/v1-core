/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoodTokenFactory,
  GoodTokenFactoryInterface,
} from "../GoodTokenFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "kernelAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newKernel",
        type: "address",
      },
    ],
    name: "setKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009553480156200001657600080fd5b506040516200278c3803806200278c8339810160408190526200003991620001d9565b604080518082018252600481526311dbdbd960e21b6020808301918252835180850190945260068452654c5a45524f4760d01b90840152815184939162000084916000919062000133565b5080516200009a90600190602084019062000133565b50506007805460ff1916905550620000b233620000d9565b600880546001600160a01b0319166001600160a01b03929092169190911790555062000248565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000141906200020b565b90600052602060002090601f016020900481019282620001655760008555620001b0565b82601f106200018057805160ff1916838001178555620001b0565b82800160010185558215620001b0579182015b82811115620001b057825182559160200191906001019062000193565b50620001be929150620001c2565b5090565b5b80821115620001be5760008155600101620001c3565b600060208284031215620001ec57600080fd5b81516001600160a01b03811681146200020457600080fd5b9392505050565b600181811c908216806200022057607f821691505b602082108114156200024257634e487b7160e01b600052602260045260246000fd5b50919050565b61253480620002586000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80638456cb59116100e3578063c87b56dd1161008c578063d4aae0c411610066578063d4aae0c41461032d578063e985e9c51461033e578063f2fde38b1461037a57600080fd5b8063c87b56dd146102f4578063cc81203c14610307578063d0def5211461031a57600080fd5b80639dc29fac116100bd5780639dc29fac146102bb578063a22cb465146102ce578063b88d4fde146102e157600080fd5b80638456cb59146102955780638da5cb5b1461029d57806395d89b41146102b357600080fd5b806342842e0e1161014557806370a082311161011f57806370a0823114610263578063715018a6146102845780637e1c0c091461028c57600080fd5b806342842e0e146102355780635c975abb146102485780636352211e1461025057600080fd5b8063095ea7b311610176578063095ea7b31461020557806323b872dd1461021a5780633f4ba83a1461022d57600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063081812fc146101da575b600080fd5b6101b06101ab3660046122ac565b61038d565b60405190151581526020015b60405180910390f35b6101cd6103e4565b6040516101bc9190612396565b6101ed6101e83660046122e6565b610476565b6040516001600160a01b0390911681526020016101bc565b610218610213366004612265565b610510565b005b610218610228366004612093565b610660565b6102186106e7565b610218610243366004612093565b61079f565b6101b06107ba565b6101ed61025e3660046122e6565b6107cd565b610276610271366004612045565b610858565b6040519081526020016101bc565b6102186108f2565b61027660095481565b61021861095c565b60075461010090046001600160a01b03166101ed565b6101cd610a12565b6102186102c9366004612265565b610a21565b6102186102dc3660046121ab565b610ae9565b6102186102ef3660046120cf565b610af4565b6101cd6103023660046122e6565b610b82565b610218610315366004612045565b610d15565b6102766103283660046121e2565b610dd5565b6008546001600160a01b03166101ed565b6101b061034c366004612060565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610218610388366004612045565b610ed2565b60006001600160e01b0319821615806103cf57506001600160e01b031982167faa96535500000000000000000000000000000000000000000000000000000000145b806103de57506103de82610fb7565b92915050565b6060600080546103f390612418565b80601f016020809104026020016040519081016040528092919081815260200182805461041f90612418565b801561046c5780601f106104415761010080835404028352916020019161046c565b820191906000526020600020905b81548152906001019060200180831161044f57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104f45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061051b826107cd565b9050806001600160a01b0316836001600160a01b031614156105a55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104eb565b336001600160a01b03821614806105df57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106515760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104eb565b61065b8383611039565b505050565b61066a33826110a7565b6106dc5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104eb565b61065b83838361119a565b60075461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061072157506008546001600160a01b031633145b610795576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016104eb565b61079d611367565b565b61065b83838360405180602001604052806000815250610af4565b60006107c860075460ff1690565b905090565b6000818152600260205260408120546001600160a01b0316806103de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104eb565b60006001600160a01b0382166108d65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104eb565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b036101009091041633146109525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b61079d6000611405565b60075461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061099657506008546001600160a01b031633145b610a0a576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016104eb565b61079d611476565b6060600180546103f390612418565b6008546001600160a01b0316336001600160a01b031614610a935760405162461bcd60e51b815260206004820152602660248201527f4b65726e61626c653a2063616c6c2066726f6d206f757473696465207468652060448201526512d95c9b995b60d21b60648201526084016104eb565b610a9b6107ba565b15610adb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104eb565b610ae582826114f3565b5050565b610ae533838361159e565b610afe33836110a7565b610b705760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104eb565b610b7c8484848461166d565b50505050565b6000818152600260205260409020546060906001600160a01b0316610c0f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016104eb565b60008281526006602052604081208054610c2890612418565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5490612418565b8015610ca15780601f10610c7657610100808354040283529160200191610ca1565b820191906000526020600020905b815481529060010190602001808311610c8457829003601f168201915b505050505090506000610cbf60408051602081019091526000815290565b9050805160001415610cd2575092915050565b815115610d04578082604051602001610cec92919061232b565b60405160208183030381529060405292505050919050565b610d0d846116eb565b949350505050565b6007546001600160a01b03610100909104163314610d755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b610d7d6107ba565b610dc95760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104eb565b610dd2816117e1565b50565b6008546000906001600160a01b0316336001600160a01b031614610e4a5760405162461bcd60e51b815260206004820152602660248201527f4b65726e61626c653a2063616c6c2066726f6d206f757473696465207468652060448201526512d95c9b995b60d21b60648201526084016104eb565b610e526107ba565b15610e925760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104eb565b610d0d8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118ad92505050565b6007546001600160a01b03610100909104163314610f325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b6001600160a01b038116610fae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104eb565b610dd281611405565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061101a57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103de57506301ffc9a760e01b6001600160e01b03198316146103de565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061106e826107cd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166111205760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104eb565b600061112b836107cd565b9050806001600160a01b0316846001600160a01b031614806111665750836001600160a01b031661115b84610476565b6001600160a01b0316145b80610d0d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610d0d565b826001600160a01b03166111ad826107cd565b6001600160a01b0316146112295760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016104eb565b6001600160a01b0382166112a45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104eb565b6112af600082611039565b6001600160a01b03831660009081526003602052604081208054600192906112d89084906123d5565b90915550506001600160a01b03821660009081526003602052604081208054600192906113069084906123a9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61136f6107ba565b6113bb5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104eb565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600780546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61147e6107ba565b156114be5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104eb565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113e83390565b6114fd82826110a7565b6115955760405162461bcd60e51b815260206004820152604b60248201527f476f6f6453657276696365546f6b656e466163746f72793a2063616c6c65722060448201527f6973206e6f74206f776e6572206f7220617070726f76656420746f206275726e60648201527f207468697320746f6b656e000000000000000000000000000000000000000000608482015260a4016104eb565b610ae5816118cc565b816001600160a01b0316836001600160a01b031614156116005760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104eb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61167884848461119a565b6116848484848461190c565b610b7c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b6000818152600260205260409020546060906001600160a01b03166117785760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104eb565b600061178f60408051602081019091526000815290565b905060008151116117af57604051806020016040528060008152506117da565b806117b984611a64565b6040516020016117ca92919061232b565b6040516020818303038152906040525b9392505050565b6117f3816001600160a01b0316611b96565b61188b5760405162461bcd60e51b815260206004820152604160248201527f4b65726e61626c653a204e6577204b65726e656c20616464726573732069732060448201527f6e6f7420612076616c6964204b65726e656c20696d706c656d656e746174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a4016104eb565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60098054600101908190556118c28382611c38565b6103de8183611c52565b6118d581611cfb565b600081815260066020526040902080546118ee90612418565b159050610dd2576000818152600660205260408120610dd291611f56565b60006001600160a01b0384163b15611a5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061195090339089908890889060040161235a565b602060405180830381600087803b15801561196a57600080fd5b505af192505050801561199a575060408051601f3d908101601f19168201909252611997918101906122c9565b60015b611a3f573d8080156119c8576040519150601f19603f3d011682016040523d82523d6000602084013e6119cd565b606091505b508051611a375760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d0d565b506001949350505050565b606081611aa457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611ace5780611ab881612453565b9150611ac79050600a836123c1565b9150611aa8565b60008167ffffffffffffffff811115611ae957611ae96124c4565b6040519080825280601f01601f191660200182016040528015611b13576020820181803683370190505b5090505b8415610d0d57611b286001836123d5565b9150611b35600a8661246e565b611b409060306123a9565b60f81b818381518110611b5557611b556124ae565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b8f600a866123c1565b9450611b17565b60006001600160a01b03821615801590611bb957506001600160a01b0382163b15155b80156103de57506040516301ffc9a760e01b8152600060048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b158015611c0057600080fd5b505afa158015611c14573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de919061228f565b610ae5828260405180602001604052806000815250611d96565b6000828152600260205260409020546001600160a01b0316611cdc5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016104eb565b6000828152600660209081526040909120825161065b92840190611f90565b6000611d06826107cd565b9050611d13600083611039565b6001600160a01b0381166000908152600360205260408120805460019290611d3c9084906123d5565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b611da08383611e14565b611dad600084848461190c565b61065b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104eb565b6001600160a01b038216611e6a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104eb565b6000818152600260205260409020546001600160a01b031615611ecf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104eb565b6001600160a01b0382166000908152600360205260408120805460019290611ef89084906123a9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b508054611f6290612418565b6000825580601f10611f72575050565b601f016020900490600052602060002090810190610dd29190612014565b828054611f9c90612418565b90600052602060002090601f016020900481019282611fbe5760008555612004565b82601f10611fd757805160ff1916838001178555612004565b82800160010185558215612004579182015b82811115612004578251825591602001919060010190611fe9565b50612010929150612014565b5090565b5b808211156120105760008155600101612015565b80356001600160a01b038116811461204057600080fd5b919050565b60006020828403121561205757600080fd5b6117da82612029565b6000806040838503121561207357600080fd5b61207c83612029565b915061208a60208401612029565b90509250929050565b6000806000606084860312156120a857600080fd5b6120b184612029565b92506120bf60208501612029565b9150604084013590509250925092565b600080600080608085870312156120e557600080fd5b6120ee85612029565b93506120fc60208601612029565b925060408501359150606085013567ffffffffffffffff8082111561212057600080fd5b818701915087601f83011261213457600080fd5b813581811115612146576121466124c4565b604051601f8201601f19908116603f0116810190838211818310171561216e5761216e6124c4565b816040528281528a602084870101111561218757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156121be57600080fd5b6121c783612029565b915060208301356121d7816124da565b809150509250929050565b6000806000604084860312156121f757600080fd5b61220084612029565b9250602084013567ffffffffffffffff8082111561221d57600080fd5b818601915086601f83011261223157600080fd5b81358181111561224057600080fd5b87602082850101111561225257600080fd5b6020830194508093505050509250925092565b6000806040838503121561227857600080fd5b61228183612029565b946020939093013593505050565b6000602082840312156122a157600080fd5b81516117da816124da565b6000602082840312156122be57600080fd5b81356117da816124e8565b6000602082840312156122db57600080fd5b81516117da816124e8565b6000602082840312156122f857600080fd5b5035919050565b600081518084526123178160208601602086016123ec565b601f01601f19169290920160200192915050565b6000835161233d8184602088016123ec565b8351908301906123518183602088016123ec565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261238c60808301846122ff565b9695505050505050565b6020815260006117da60208301846122ff565b600082198211156123bc576123bc612482565b500190565b6000826123d0576123d0612498565b500490565b6000828210156123e7576123e7612482565b500390565b60005b838110156124075781810151838201526020016123ef565b83811115610b7c5750506000910152565b600181811c9082168061242c57607f821691505b6020821081141561244d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561246757612467612482565b5060010190565b60008261247d5761247d612498565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610dd257600080fd5b6001600160e01b031981168114610dd257600080fdfea264697066735822122050a26aac4ba33f3462aa39f93bb1adb2005e1700bd024f1cb3248587ecf0cfe064736f6c63430008050033";

type GoodTokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoodTokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoodTokenFactory__factory extends ContractFactory {
  constructor(...args: GoodTokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GoodTokenFactory";
  }

  deploy(
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoodTokenFactory> {
    return super.deploy(
      kernelAddress,
      overrides || {}
    ) as Promise<GoodTokenFactory>;
  }
  getDeployTransaction(
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(kernelAddress, overrides || {});
  }
  attach(address: string): GoodTokenFactory {
    return super.attach(address) as GoodTokenFactory;
  }
  connect(signer: Signer): GoodTokenFactory__factory {
    return super.connect(signer) as GoodTokenFactory__factory;
  }
  static readonly contractName: "GoodTokenFactory";
  public readonly contractName: "GoodTokenFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoodTokenFactoryInterface {
    return new utils.Interface(_abi) as GoodTokenFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoodTokenFactory {
    return new Contract(address, _abi, signerOrProvider) as GoodTokenFactory;
  }
}
