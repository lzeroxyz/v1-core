/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoodServiceTokenFactoryMock,
  GoodServiceTokenFactoryMockInterface,
} from "../GoodServiceTokenFactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "globalUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "kernelAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kernel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newKernel",
        type: "address",
      },
    ],
    name: "setKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "setTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006005553480156200001657600080fd5b5060405162002cf538038062002cf58339810160408190526200003991620001bf565b81818082620000488162000089565b506003805460ff191690556200005e33620000a2565b600480546001600160a01b0319166001600160a01b0392909216919091179055506200030392505050565b80516200009e906002906020840190620000fc565b5050565b600380546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010a90620002b0565b90600052602060002090601f0160209004810192826200012e576000855562000179565b82601f106200014957805160ff191683800117855562000179565b8280016001018555821562000179579182015b82811115620001795782518255916020019190600101906200015c565b50620001879291506200018b565b5090565b5b808211156200018757600081556001016200018c565b80516001600160a01b0381168114620001ba57600080fd5b919050565b60008060408385031215620001d357600080fd5b82516001600160401b0380821115620001eb57600080fd5b818501915085601f8301126200020057600080fd5b815181811115620002155762000215620002ed565b604051601f8201601f19908116603f01168101908382118183101715620002405762000240620002ed565b816040528281526020935088848487010111156200025d57600080fd5b600091505b8282101562000281578482018401518183018501529083019062000262565b82821115620002935760008484830101525b9550620002a5915050858201620001a2565b925050509250929050565b600181811c90821680620002c557607f821691505b60208210811415620002e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6129e280620003136000396000f3fe608060405234801561001057600080fd5b50600436106101815760003560e01c80638da5cb5b116100d8578063cc81203c1161008c578063e985e9c511610066578063e985e9c51461030d578063f242432a14610349578063f2fde38b1461035c57600080fd5b8063cc81203c146102d6578063d0def521146102e9578063d4aae0c4146102fc57600080fd5b80639dc29fac116100bd5780639dc29fac1461029d578063a22cb465146102b0578063b2dc5dc3146102c357600080fd5b80638da5cb5b146102605780639b642de11461028a57600080fd5b80634e1273f41161013a578063715018a611610114578063715018a6146102475780637e1c0c091461024f5780638456cb591461025857600080fd5b80634e1273f41461020c57806357f7789e1461022c5780635c975abb1461023f57600080fd5b80630e89341c1161016b5780630e89341c146101cf5780632eb2c2d6146101ef5780633f4ba83a1461020457600080fd5b8062fdd58e1461018657806301ffc9a7146101ac575b600080fd5b61019961019436600461248d565b61036f565b6040519081526020015b60405180910390f35b6101bf6101ba3660046125a5565b61041b565b60405190151581526020016101a3565b6101e26101dd366004612614565b61046c565b6040516101a391906127d4565b6102026101fd366004612251565b61053b565b005b6102026105dd565b61021f61021a3660046124b7565b610695565b6040516101a39190612793565b61020261023a36600461262d565b6107d3565b6101bf610880565b610202610893565b61019960055481565b6102026108fd565b60035461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101a3565b6102026102983660046125df565b6109b3565b6102026102ab36600461248d565b610a6d565b6102026102be3660046123e6565b610a7b565b6102026102d1366004612360565b610a86565b6102026102e4366004612203565b610ac3565b6101996102f736600461241d565b610b80565b6004546001600160a01b0316610272565b6101bf61031b36600461221e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6102026103573660046122fb565b610bca565b61020261036a366004612203565b610c65565b60006001600160a01b0383166103f25760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216158061045d57506001600160e01b031982167fd4d95be900000000000000000000000000000000000000000000000000000000145b80610415575061041582610d4a565b6000818152600660205260409020805460609190819061048b90612823565b151590506104a35761049c83610dcc565b9392505050565b8080546104af90612823565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90612823565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050915050919050565b50919050565b6001600160a01b0385163314806105575750610557853361031b565b6105c95760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016103e9565b6105d68585858585610e60565b5050505050565b60035461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061061757506004546001600160a01b031633145b61068b576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016103e9565b6106936110be565b565b6060815183511461070e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016103e9565b6000835167ffffffffffffffff81111561072a5761072a6128cc565b604051908082528060200260200182016040528015610753578160200160208202803683370190505b50905060005b84518110156107cb5761079e858281518110610777576107776128b6565b6020026020010151858381518110610791576107916128b6565b602002602001015161036f565b8282815181106107b0576107b06128b6565b60209081029190910101526107c481612885565b9050610759565b509392505050565b6004546001600160a01b0316336001600160a01b03161461085c5760405162461bcd60e51b815260206004820152602660248201527f4b65726e61626c653a2063616c6c2066726f6d206f757473696465207468652060448201527f4b65726e656c000000000000000000000000000000000000000000000000000060648201526084016103e9565b6000828152600660209081526040909120825161087b9284019061202d565b505050565b600061088e60035460ff1690565b905090565b6003546001600160a01b036101009091041633146108f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e9565b610693600061115c565b60035461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061093757506004546001600160a01b031633145b6109ab576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016103e9565b6106936111cd565b60035461010090046001600160a01b03166001600160a01b0316336001600160a01b031614806109ed57506004546001600160a01b031633145b610a61576040805162461bcd60e51b81526020600482015260248101919091527f476f6f64546f6b656e466163746f72793a2043616c6c6572206973206e6f742060448201527f746865206f776e6572206f7220746865204b65726e656c20636f6e747261637460648201526084016103e9565b610a6a81611257565b50565b610a77828261126a565b5050565b610a773383836112ad565b61087b838383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506113a292505050565b6003546001600160a01b03610100909104163314610b235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e9565b610b2b610880565b610b775760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016103e9565b610a6a816114aa565b6000610bc28484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061158e92505050565b949350505050565b6001600160a01b038516331480610be65750610be6853361031b565b610c585760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016103e9565b6105d6858585858561160d565b6003546001600160a01b03610100909104163314610cc55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e9565b6001600160a01b038116610d415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103e9565b610a6a8161115c565b60006001600160e01b031982167fd9b67a26000000000000000000000000000000000000000000000000000000001480610dad57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061041557506301ffc9a760e01b6001600160e01b0319831614610415565b606060028054610ddb90612823565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790612823565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b50505050509050919050565b8151835114610ec25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103e9565b6001600160a01b038416610f265760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103e9565b3360005b8451811015611050576000858281518110610f4757610f476128b6565b602002602001015190506000858381518110610f6557610f656128b6565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610ff85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016103e9565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061103590849061280b565b925050819055505050508061104990612885565b9050610f2a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110a09291906127a6565b60405180910390a46110b68187878787876117b4565b505050505050565b6110c6610880565b6111125760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016103e9565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600380546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111d5610880565b156112225760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016103e9565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861113f3390565b8051610a7790600290602084019061202d565b61127682826001611969565b6000818152600660205260409020805461128f90612823565b159050610a77576000818152600660205260408120610a77916120b1565b816001600160a01b0316836001600160a01b031614156113355760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016103e9565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000815167ffffffffffffffff8111156113be576113be6128cc565b6040519080825280602002602001820160405280156113e7578160200160208202803683370190505b50905060005b825181101561149e57600182828151811061140a5761140a6128b6565b6020026020010181815250506006600084838151811061142c5761142c6128b6565b60200260200101518152602001908152602001600020805461144d90612823565b15905061148c576006600084838151811061146a5761146a6128b6565b60200260200101518152602001908152602001600020600061148c91906120b1565b8061149681612885565b9150506113ed565b5061087b838383611ae3565b6114bc816001600160a01b0316611d18565b6115545760405162461bcd60e51b815260206004820152604160248201527f4b65726e61626c653a204e6577204b65726e656c20616464726573732069732060448201527f6e6f7420612076616c6964204b65726e656c20696d706c656d656e746174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a4016103e9565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600580546001908101918290556115e090849083906000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dba92505050565b81511561041557600081815260066020908152604090912083516116069285019061202d565b5092915050565b6001600160a01b0384166116715760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103e9565b3361168a81878761168188611ed7565b6105d688611ed7565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561170e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016103e9565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061174b90849061280b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46117ab828888888888611f22565b50505050505050565b6001600160a01b0384163b156110b65760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906117f890899089908890889088906004016126f2565b602060405180830381600087803b15801561181257600080fd5b505af1925050508015611842575060408051601f3d908101601f1916820190925261183f918101906125c2565b60015b6118f85761184e6128e2565b806308c379a0141561188857506118636128fe565b8061186e575061188a565b8060405162461bcd60e51b81526004016103e991906127d4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016103e9565b6001600160e01b0319811663bc197c8160e01b146117ab5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016103e9565b6001600160a01b0383166119cb5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103e9565b336119fb818560006119dc87611ed7565b6119e587611ed7565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015611a785760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103e9565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038316611b455760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103e9565b8051825114611ba75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103e9565b604080516020810190915260009081905233905b8351811015611cb9576000848281518110611bd857611bd86128b6565b602002602001015190506000848381518110611bf657611bf66128b6565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015611c825760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103e9565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580611cb181612885565b915050611bbb565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611d0a9291906127a6565b60405180910390a450505050565b60006001600160a01b03821615801590611d3b57506001600160a01b0382163b15155b801561041557506040516301ffc9a760e01b8152600060048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b158015611d8257600080fd5b505afa158015611d96573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190612588565b6001600160a01b038416611e365760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b33611e478160008761168188611ed7565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611e7790849061280b565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46105d681600087878787611f22565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611f1157611f116128b6565b602090810291909101015292915050565b6001600160a01b0384163b156110b65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611f669089908990889088908890600401612750565b602060405180830381600087803b158015611f8057600080fd5b505af1925050508015611fb0575060408051601f3d908101601f19168201909252611fad918101906125c2565b60015b611fbc5761184e6128e2565b6001600160e01b0319811663f23a6e6160e01b146117ab5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016103e9565b82805461203990612823565b90600052602060002090601f01602090048101928261205b57600085556120a1565b82601f1061207457805160ff19168380011785556120a1565b828001600101855582156120a1579182015b828111156120a1578251825591602001919060010190612086565b506120ad9291506120e7565b5090565b5080546120bd90612823565b6000825580601f106120cd575050565b601f016020900490600052602060002090810190610a6a91905b5b808211156120ad57600081556001016120e8565b80356001600160a01b038116811461211357600080fd5b919050565b600082601f83011261212957600080fd5b81356020612136826127e7565b6040516121438282612858565b8381528281019150858301600585901b8701840188101561216357600080fd5b60005b8581101561218257813584529284019290840190600101612166565b5090979650505050505050565b600082601f8301126121a057600080fd5b813567ffffffffffffffff8111156121ba576121ba6128cc565b6040516121d1601f8301601f191660200182612858565b8181528460208386010111156121e657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561221557600080fd5b61049c826120fc565b6000806040838503121561223157600080fd5b61223a836120fc565b9150612248602084016120fc565b90509250929050565b600080600080600060a0868803121561226957600080fd5b612272866120fc565b9450612280602087016120fc565b9350604086013567ffffffffffffffff8082111561229d57600080fd5b6122a989838a01612118565b945060608801359150808211156122bf57600080fd5b6122cb89838a01612118565b935060808801359150808211156122e157600080fd5b506122ee8882890161218f565b9150509295509295909350565b600080600080600060a0868803121561231357600080fd5b61231c866120fc565b945061232a602087016120fc565b93506040860135925060608601359150608086013567ffffffffffffffff81111561235457600080fd5b6122ee8882890161218f565b60008060006040848603121561237557600080fd5b61237e846120fc565b9250602084013567ffffffffffffffff8082111561239b57600080fd5b818601915086601f8301126123af57600080fd5b8135818111156123be57600080fd5b8760208260051b85010111156123d357600080fd5b6020830194508093505050509250925092565b600080604083850312156123f957600080fd5b612402836120fc565b9150602083013561241281612988565b809150509250929050565b60008060006040848603121561243257600080fd5b61243b846120fc565b9250602084013567ffffffffffffffff8082111561245857600080fd5b818601915086601f83011261246c57600080fd5b81358181111561247b57600080fd5b8760208285010111156123d357600080fd5b600080604083850312156124a057600080fd5b6124a9836120fc565b946020939093013593505050565b600080604083850312156124ca57600080fd5b823567ffffffffffffffff808211156124e257600080fd5b818501915085601f8301126124f657600080fd5b81356020612503826127e7565b6040516125108282612858565b8381528281019150858301600585901b870184018b101561253057600080fd5b600096505b8487101561255a57612546816120fc565b835260019690960195918301918301612535565b509650508601359250508082111561257157600080fd5b5061257e85828601612118565b9150509250929050565b60006020828403121561259a57600080fd5b815161049c81612988565b6000602082840312156125b757600080fd5b813561049c81612996565b6000602082840312156125d457600080fd5b815161049c81612996565b6000602082840312156125f157600080fd5b813567ffffffffffffffff81111561260857600080fd5b610bc28482850161218f565b60006020828403121561262657600080fd5b5035919050565b6000806040838503121561264057600080fd5b82359150602083013567ffffffffffffffff81111561265e57600080fd5b61257e8582860161218f565b600081518084526020808501945080840160005b8381101561269a5781518752958201959082019060010161267e565b509495945050505050565b6000815180845260005b818110156126cb576020818501810151868301820152016126af565b818111156126dd576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261271e60a083018661266a565b8281036060840152612730818661266a565b9050828103608084015261274481856126a5565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261278860a08301846126a5565b979650505050505050565b60208152600061049c602083018461266a565b6040815260006127b9604083018561266a565b82810360208401526127cb818561266a565b95945050505050565b60208152600061049c60208301846126a5565b600067ffffffffffffffff821115612801576128016128cc565b5060051b60200190565b6000821982111561281e5761281e6128a0565b500190565b600181811c9082168061283757607f821691505b6020821081141561053557634e487b7160e01b600052602260045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561287e5761287e6128cc565b6040525050565b6000600019821415612899576128996128a0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156128fb5760046000803e5060005160e01c5b90565b600060443d101561290c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561293c57505050505090565b82850191508151818111156129545750505050505090565b843d870101602082850101111561296e5750505050505090565b61297d60208286010187612858565b509095945050505050565b8015158114610a6a57600080fd5b6001600160e01b031981168114610a6a57600080fdfea26469706673582212203a7d6413315027dbfed9ef9f76c86f7b76dda79d65a86ab91f2211052a06caba64736f6c63430008050033";

type GoodServiceTokenFactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoodServiceTokenFactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoodServiceTokenFactoryMock__factory extends ContractFactory {
  constructor(...args: GoodServiceTokenFactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GoodServiceTokenFactoryMock";
  }

  deploy(
    globalUri: string,
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoodServiceTokenFactoryMock> {
    return super.deploy(
      globalUri,
      kernelAddress,
      overrides || {}
    ) as Promise<GoodServiceTokenFactoryMock>;
  }
  getDeployTransaction(
    globalUri: string,
    kernelAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      globalUri,
      kernelAddress,
      overrides || {}
    );
  }
  attach(address: string): GoodServiceTokenFactoryMock {
    return super.attach(address) as GoodServiceTokenFactoryMock;
  }
  connect(signer: Signer): GoodServiceTokenFactoryMock__factory {
    return super.connect(signer) as GoodServiceTokenFactoryMock__factory;
  }
  static readonly contractName: "GoodServiceTokenFactoryMock";
  public readonly contractName: "GoodServiceTokenFactoryMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoodServiceTokenFactoryMockInterface {
    return new utils.Interface(_abi) as GoodServiceTokenFactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoodServiceTokenFactoryMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoodServiceTokenFactoryMock;
  }
}
