/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type AcceptReservationInputStruct = {
  from: string;
  reservationId: BigNumberish;
};

export type AcceptReservationInputStructOutput = [string, BigNumber] & {
  from: string;
  reservationId: BigNumber;
};

export type AcceptReservationInviteInputStruct = {
  from: string;
  reservationId: BigNumberish;
  tokenAddresses: string[];
  tokenAmounts: BigNumberish[];
  guests: string[];
};

export type AcceptReservationInviteInputStructOutput = [
  string,
  BigNumber,
  string[],
  BigNumber[],
  string[]
] & {
  from: string;
  reservationId: BigNumber;
  tokenAddresses: string[];
  tokenAmounts: BigNumber[];
  guests: string[];
};

export type CancelReservationInputStruct = {
  from: string;
  reservationId: BigNumberish;
};

export type CancelReservationInputStructOutput = [string, BigNumber] & {
  from: string;
  reservationId: BigNumber;
};

export type CreateReservationInputStruct = {
  goodOwner: string;
  goodId: BigNumberish;
  goodServiceId: BigNumberish;
  goodServiceVoucherIds: BigNumberish[];
  from: string;
  tokenAddresses: string[];
  tokenAmounts: BigNumberish[];
  payers: string[];
  guests: string[];
};

export type CreateReservationInputStructOutput = [
  string,
  BigNumber,
  BigNumber,
  BigNumber[],
  string,
  string[],
  BigNumber[],
  string[],
  string[]
] & {
  goodOwner: string;
  goodId: BigNumber;
  goodServiceId: BigNumber;
  goodServiceVoucherIds: BigNumber[];
  from: string;
  tokenAddresses: string[];
  tokenAmounts: BigNumber[];
  payers: string[];
  guests: string[];
};

export type DenyReservationInputStruct = {
  from: string;
  reservationId: BigNumberish;
};

export type DenyReservationInputStructOutput = [string, BigNumber] & {
  from: string;
  reservationId: BigNumber;
};

export type DenyReservationInviteInputStruct = {
  from: string;
  reservationId: BigNumberish;
};

export type DenyReservationInviteInputStructOutput = [string, BigNumber] & {
  from: string;
  reservationId: BigNumber;
};

export interface IReservationKernelInterface extends utils.Interface {
  contractName: "IReservationKernel";
  functions: {
    "acceptReservation((address,uint256))": FunctionFragment;
    "acceptReservationInvite((address,uint256,address[],uint256[],address[]))": FunctionFragment;
    "cancelReservation((address,uint256))": FunctionFragment;
    "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))": FunctionFragment;
    "denyReservation((address,uint256))": FunctionFragment;
    "denyReservationInvite((address,uint256))": FunctionFragment;
    "pause()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "unpause()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptReservation",
    values: [AcceptReservationInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "acceptReservationInvite",
    values: [AcceptReservationInviteInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelReservation",
    values: [CancelReservationInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createReservation",
    values: [CreateReservationInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "denyReservation",
    values: [DenyReservationInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "denyReservationInvite",
    values: [DenyReservationInviteInputStruct]
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "acceptReservation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptReservationInvite",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelReservation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createReservation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "denyReservation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "denyReservationInvite",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;

  events: {};
}

export interface IReservationKernel extends BaseContract {
  contractName: "IReservationKernel";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IReservationKernelInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    acceptReservation(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "acceptReservation((address,uint256))"(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    acceptReservationInvite(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "acceptReservationInvite((address,uint256,address[],uint256[],address[]))"(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelReservation(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "cancelReservation((address,uint256))"(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createReservation(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))"(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    denyReservation(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "denyReservation((address,uint256))"(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    denyReservationInvite(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "denyReservationInvite((address,uint256))"(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "pause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "unpause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  acceptReservation(
    acceptReservationInput: AcceptReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "acceptReservation((address,uint256))"(
    acceptReservationInput: AcceptReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  acceptReservationInvite(
    acceptReservationInviteInput: AcceptReservationInviteInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "acceptReservationInvite((address,uint256,address[],uint256[],address[]))"(
    acceptReservationInviteInput: AcceptReservationInviteInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelReservation(
    cancelReservationInput: CancelReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "cancelReservation((address,uint256))"(
    cancelReservationInput: CancelReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createReservation(
    createReservationInput: CreateReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))"(
    createReservationInput: CreateReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  denyReservation(
    denyReservationInput: DenyReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "denyReservation((address,uint256))"(
    denyReservationInput: DenyReservationInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  denyReservationInvite(
    denyReservationInviteInput: DenyReservationInviteInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "denyReservationInvite((address,uint256))"(
    denyReservationInviteInput: DenyReservationInviteInputStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "pause()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "unpause()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptReservation(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "acceptReservation((address,uint256))"(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    acceptReservationInvite(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "acceptReservationInvite((address,uint256,address[],uint256[],address[]))"(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelReservation(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelReservation((address,uint256))"(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    createReservation(
      createReservationInput: CreateReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, number] & {
        mintedReservationId: BigNumber;
        mintedReservationAmount: BigNumber;
        mintedReservationState: number;
      }
    >;

    "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))"(
      createReservationInput: CreateReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, number] & {
        mintedReservationId: BigNumber;
        mintedReservationAmount: BigNumber;
        mintedReservationState: number;
      }
    >;

    denyReservation(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "denyReservation((address,uint256))"(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    denyReservationInvite(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "denyReservationInvite((address,uint256))"(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    pause(overrides?: CallOverrides): Promise<void>;

    "pause()"(overrides?: CallOverrides): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    unpause(overrides?: CallOverrides): Promise<void>;

    "unpause()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    acceptReservation(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "acceptReservation((address,uint256))"(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    acceptReservationInvite(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "acceptReservationInvite((address,uint256,address[],uint256[],address[]))"(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelReservation(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "cancelReservation((address,uint256))"(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createReservation(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))"(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    denyReservation(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "denyReservation((address,uint256))"(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    denyReservationInvite(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "denyReservationInvite((address,uint256))"(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "pause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "unpause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptReservation(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "acceptReservation((address,uint256))"(
      acceptReservationInput: AcceptReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    acceptReservationInvite(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "acceptReservationInvite((address,uint256,address[],uint256[],address[]))"(
      acceptReservationInviteInput: AcceptReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelReservation(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "cancelReservation((address,uint256))"(
      cancelReservationInput: CancelReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createReservation(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createReservation((address,uint256,uint256,uint256[],address,address[],uint256[],address[],address[]))"(
      createReservationInput: CreateReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    denyReservation(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "denyReservation((address,uint256))"(
      denyReservationInput: DenyReservationInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    denyReservationInvite(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "denyReservationInvite((address,uint256))"(
      denyReservationInviteInput: DenyReservationInviteInputStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "pause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "unpause()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
